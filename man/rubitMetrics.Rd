% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/metrics.R
\name{rubitMetrics}
\alias{rubitMetrics}
\title{A wrapper combining several functions which calculate a range of behavioural metrics from processed X,Y-trajectories.}
\usage{
rubitMetrics(LIST, scale = 1, speed_smoothing = 19,
  turn_resample_rate = 1, activity_window = 1, activity_min_speed = 0.1,
  n_radials = 1, n_slices = 1, area_rad = NA, thigmo_dist = NA,
  n_bootstraps = 20, verbose = FALSE)
}
\arguments{
\item{LIST}{a list of matrices containing processed X,Y-trajectories returned from \code{rubitBasic}.}

\item{scale}{a numeric to calibrate the true spatial scale, in pixels per mm. At the default value, measurements are returned in pixels.}

\item{speed_smoothing}{the size of the rolling median window used to smooth speed and acceleration, in frames.}

\item{turn_resample_rate}{the number of seconds over which to resample X,Y-coordinate data and calculate turning angle from.}

\item{activity_window}{the window size used to define changes in activity, in seconds.}

\item{activity_min_speed}{the minimum speed threshold used to define changes in activity below which no movement is inferred, in mm/second.}

\item{n_radials}{the number of concentric circles to divide a circular area into.}

\item{n_slices}{the number of slices to divide a circular area into.}

\item{area_rad}{the minimum radius of the area. If an area shows insufficient movement to define a minimum enclosing circle of at least this radius, then a new minimum enclosing circle is calculated using \code{area_rad} and area metainformation stored in \code{attributes(m)}. This unit is defined in pixels unless \code{scale} != 1.}

\item{thigmo_dist}{the distance from the boundary perimeter defined as being central (i.e. not thigmotaxis), in mm. If thigmo_dist = NA, thigmotaxis is defined as movement in the outer 50\% of the area (i.e. > R/sqrt(2) from the area centre, where R is the radius of the whole area).}

\item{n_bootstraps}{the number of random data samples used to calculate the minimum enclosing circle defining each circular area.}

\item{verbose}{logical; if TRUE, the function will print messages at every step.}
}
\value{
A list of numerical matrices. Each matrix corresponds to an area.
}
\description{
This function loads processed X,Y-trajectories returned from \code{rubitBasic}, and returns data on metrics on velocity, position (e.g. thigmotaxis, exploration), turning angle, and activity (i.e. pause / walk events).
}
\note{
The returned list contains a numerical matrix for each area. The attributes of list contain metadata and additional information is present in each of the attributes of each matrix.
Re-encoding a new framerate with \code{adj_fps} can correct potential errors made during video recording and/or tracking analysis. Check that the value returned by \code{\link{calcFPS}} matches the calculated framerate of the original video (e.g. using the 'ffprobe' function in FFmpeg [\url{https://ffmpeg.org/}].
}
\examples{
data(tenebrio)

rubitMetrics(tenebrio, scale= 2.08, n_radials = 8, n_slices = 12, area_rad = 90, thigmo_dist = 20, verbose = TRUE)

### Apply function over list of results files:
#filelist <- list.files()
#lapply(filelist, rubitMetrics, scale= 2.08, n_radials = 8, n_slices = 12, area_rad = 90, thigmo_dist = 20, verbose = TRUE)
}
\seealso{
\code{\link{rubitToDF}} for converting the returned lists (or list of lists) to a dataframe for ease of further analysis. See \code{\link{rubitBasic}}, \code{\link{rubitCalcSpeed}}, \code{\link{rubitCalcPosition}}, \code{\link{rubitCalcTurning}}, and \code{\link{rubitCalcActivity}} to understand the different steps of processing used in this function.
}

