% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/calcPosition.R
\name{rubitCalcPosition}
\alias{rubitCalcPosition}
\title{Calculate positional information (e.g. thigmotaxis, exploration) from a circular area.}
\usage{
rubitCalcPosition(m, n_radials = 1, n_slices = 1, thigmo_dist = NA,
  scale = 1, n_bootstraps = 20)
}
\arguments{
\item{m}{a matrix containing processed tracking data outputted by \code{\link{rubitBasic}}.}

\item{n_radials}{the number of concentric circles to divide a circular area into.}

\item{n_slices}{the number of slices to divide a circular area into.}

\item{thigmo_dist}{the distance from the boundary perimeter defined as being central (i.e. not thigmotaxis), in mm. If thigmo_dist = NA, thigmotaxis is defined as movement in the outer 50\% of the area (i.e. > \eqn{R / sqrt(2)} from the area centre, where \eqn{R} is the radius of the whole area).}

\item{scale}{a numeric to calibrate the true spatial scale, in pixels per mm. At the default value, measurements are returned in pixels.}

\item{n_bootstraps}{the number of random data samples used to calculate the minimum enclosing circle defining each circular area.}
}
\value{
The inputted matrix with additional information on position added for each timepoint.
}
\description{
Divides a circular area into a user-defined number of grid cells of equal size in order to quantify exploration (number of unique grid cells visited per unit time). Divides a circular area into inner and outer zones in order to quantify thigmotaxis (movement near the area perimeter).
}
\examples{
data(tenebrio)

### Divide circular area into 96 cells, and define thigmotaxis
### as movement within 2cm of the area perimeter.
sapply(tenebrio, rubitCalcPosition, n_radials = 8, n_slices = 12, thigmo_dist = 20)
}
\seealso{
\code{\link{rubitPlotPosition}} to visualise positional information, and \code{\link{rubitMain}} to understand the different steps of processing. This function uses the function \code{getMinCircle()} from the package 'shotGroups' to calculate a minimum enclosing circle for X,Y-coordinates.
}

